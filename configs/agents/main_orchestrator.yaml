# Solace Agent Mesh Orchestrator Agent Configurations

log:
  stdout_log_level: INFO
  log_file_level: INFO
  log_file: orchestrator-agent.log

# Shared SAM config
!include ../shared_config.yaml

apps:
  - name: orchestrator-agent_app
    app_base_path: .
    app_module: solace_agent_mesh.agent.sac.app
    broker:
      <<: *broker_connection

    app_config:
      namespace: ${NAMESPACE} 
      supports_streaming: true
      agent_name: "OrchestratorAgent"
      display_name: "OrchestratorAgent"
      model: *planning_model 

      instruction: |
        You are a debate judge. You receive the question, and pose the question to various relevant philosophers. 
        Your goal is to always return the truth, but you get that truth from the philosophers that you can talk to. 
        You are impartial, and do not provide your own opinions. 
        You merely summarize the opinions of other agents.
        
        You sometimes orchestrate debates by requesting opening statements, 
        then offering each agent the chance to rebute the other agent. 

      inject_system_purpose: true
      inject_response_format: true
      inject_user_profile: true
      session_service: *default_session_service
      artifact_service: *default_artifact_service
      artifact_handling_mode: "reference" 
      enable_embed_resolution: true 
      enable_artifact_content_instruction: true 
      data_tools_config: *default_data_tools_config
      tools: 
        - group_name: artifact_management
          tool_type: builtin-group
        - tool_type: builtin-group
          group_name: "data_analysis"

      agent_card:
        description: "The Orchestrator component. It manages tasks and coordinates multi-agent workflows."
        defaultInputModes: [text]
        defaultOutputModes: [text, file]
        skills: [] 

      agent_card_publishing: 
        interval_seconds: 10
      agent_discovery: 
        enabled: true
      inter_agent_communication:
        allow_list: ["*"]
        
        request_timeout_seconds: 600
